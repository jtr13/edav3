[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "EDAV",
    "section": "",
    "text": "1 Introduction",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "clustering.html",
    "href": "clustering.html",
    "title": "2  Clustering",
    "section": "",
    "text": "2.1 kmeans\n// create x-axis svg.select(“g#plotarea”) .append(“g”) .attr(“id”, “xaxis”) .attr(“transform”, translate (0, ${innerHeight})) .call(xAxis);\n// create x-axis label svg.select(“g#plotarea”) .append(“text”) .attr(“id”, “xlab”) .attr(“x”, innerWidth/2) .attr(“y”, innerHeight + .75 * margin.bottom) .attr(“text-anchor”, “middle”) .text(“v1”);\n// create y-axis svg.select(“g#plotarea”) .append(“g”) .attr(“id”, “yaxis”) .call(yAxis);\n// create y-axis label svg.select(“g#plotarea”) .append(“text”) .attr(“id”, “ylab”) .attr(“x”, -margin.left/2) .attr(“y”, innerHeight/2) .attr(“text-anchor”, “middle”) .attr(“transform”, “rotate (-90,” + (0 - .75 * margin.left) + “,” + innerHeight/2 + “)” ) .text(“v2”);\n// let data = d3.range(200).map(d =&gt; ({x: Math.random(), y: Math.random()}));\n// number of clusters const k = 2;\n// randomly assign clusters\nconsole.log(data);\n// draw points svg.select(“g#plotarea”) .append(“g”).attr(“id”, “points”).selectAll(“circle”) .data(data) .enter() .append(“circle”) .attr(“cx”, d =&gt; xScale(d.x)) .attr(“cy”, d =&gt; yScale(d.y)) .attr(“r”, “2”) .style(“fill”, d =&gt; colorScale(d.cluster));\n// set initial centroids\nlet centroids = d3.range(k).map(d =&gt; ({x: -1, y: -1, cluster: -1})); // placeholders for(let j = 0; j &lt; k; j++) { centroids[j].x = d3.mean(data.filter(d =&gt; d.cluster == j).map(d =&gt; d.x)); centroids[j].y = d3.mean(data.filter(d =&gt; d.cluster == j).map(d =&gt; d.y)); centroids[j].cluster = j; };\nconsole.log(centroids);\n// draw initial centroids svg.select(“g#plotarea”) .append(“g”).attr(“id”, “centroids”).selectAll(“circle”) .data(centroids) .enter() .append(“circle”) .attr(“cx”, d =&gt; xScale(d.x)) .attr(“cy”, d =&gt; yScale(d.y)) .attr(“r”, “10”) .style(“fill”, d =&gt; colorScale(d.cluster)) .attr(“fill-opacity”, “.5”);",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Clustering</span>"
    ]
  },
  {
    "objectID": "clustering.html#kmeans",
    "href": "clustering.html#kmeans",
    "title": "2  Clustering",
    "section": "",
    "text": "&lt;h1&gt;Seven Points&lt;/h1&gt;\n  &lt;div id=\"plot\"&gt;&lt;/div&gt;\n  &lt;button type=\"button\" onclick=\"update_centroids(k)\"&gt;Update centroids&lt;/button&gt;\n  &lt;button type=\"button\" onclick=\"reassign_points()&gt;Reassign points&lt;/button&gt;\n    // width and height\n    const w = 400;\n    const h = 400;\n    const margin = {left: 50, right: 20, top: 20, bottom: 50};\n    const innerHeight = h - margin.top - margin.bottom;\nconst innerWidth = w - margin.left - margin.right;\n\n\n    // create scale functions\n    const xScale = d3.scaleLinear()\n    .domain([0, 4])\n    .range([0, innerWidth]);\n\n    const yScale = d3.scaleLinear()\n    .domain([0, 4])\n    .range([innerHeight, 0]);\n\n    const colors = d3.scaleOrdinal(d3.schemeCategory10);\n\n    // define X axis\n    const xAxis = d3.axisBottom()\n    .scale(xScale)\n    .ticks(5);\n\n    // define Y axis\n    const yAxis = d3.axisLeft()\n    .scale(yScale)\n    .ticks(5);\n\n    // create SVG elements\n    const svg = d3.select(\"div#plot\")\n    .append(\"svg\")\n    .attr(\"width\", w)\n    .attr(\"height\", h);\n\n    // create plot area\nsvg.append(\"g\")\n  .attr(\"id\", \"plotarea\")\n  .attr(\"transform\", `translate( ${margin.left}, ${margin.top} )`)\n\n\n\n\nconst colorScale = d3.scaleOrdinal(d3.schemeCategory10);\n\n    let data = [\n      {x: 1, y: 2},\n      {x: 1.5, y: 2.2},\n      {x: 3, y: 1.3},\n      {x: 2.5, y: 1.1},\n      {x: .9, y: 2.1},\n      {x: 2, y: 1.5},\n      {x: 2.5, y: 1.4}\n      ]\n\n\n\ndata = data.map(d =&gt; ({x: d.x, y: d.y, cluster: d3.randomInt(k)()}));\n\n\n\n\n\n\n    &lt;/script&gt;",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Clustering</span>"
    ]
  }
]